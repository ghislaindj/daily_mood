Index of the moods

<ul class="moods">
  <% @moods.each do |mood| %>
    <li><%= "#{mood.created_at.strftime("%d/%m/%Y")}: #{mood.human_value}" %></li>
  <% end %>
</ul>

<div id="graph">
  
</div>

<style>
  svg {
    font: 10px sans-serif;
  }

  rect {
    fill: #ddd;
  }

  .axis path, .axis line {
    fill: none;
    stroke: #fff;
  }
</style>
<script>

  var margin = {top: 20, right: 20, bottom: 40, left: 40},
      width = $('.container').width() - margin.left - margin.right,
      height = window.innerHeight - 100 - $('ul.moods').height() - margin.top - margin.bottom;

  var parseDate = d3.time.format("%d/%m/%Y").parse;

  // Gestion des couleurs
  var color = d3.scale.ordinal()
    .domain(["bad", "normal", "good"])
    .range(["red","black","green"]);

  d3.json("moods.json", function(error, json) {
    if (error) return console.warn(error);
    data = json;

    var minDate = d3.min(data,function(d, i) {return parseDate(d.updated_at);}),
      maxDate = d3.max(data,function(d, i) {return parseDate(d.updated_at);});

    var x = d3.time.scale()
        .domain([minDate, maxDate])
        .range([0+20, width-20]);

    var y = d3.scale.linear()
        .domain([1, 3])
        .range([height-20, 0+20]);

    var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom")
        .tickSize(-height);

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left")
        .ticks(3)
        .tickSize(-width);


    var svg = d3.select("div#graph").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    svg.append("rect")
        .attr("width", width)
        .attr("height", height);

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);


    svg.selectAll("circle")
      .data(data)
      .enter()
      .append("circle")
      .attr("cx", function(d) {
          return x(parseDate(d.updated_at));
      })
      .attr("cy", function (d) {
          return y(d.value);
      })
      .attr("fill",function(d) {return color(d.human_value); })
      .attr("r", function(d) {return d.value*10; });

      });
</script>